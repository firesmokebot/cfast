#*** CFAST V6, Makefile ***

#To use this makefile, you will need to provide a make target
#at the command line.  For example, to make the intel version,
# you have to type 'make intel_linux' at the prompt.
#Below this comment section there are make file Variables that 
#can be modified by the user. Please make the changes that 
#are necessary for your system configuration.

#*** Begin User Defined Variables Section ***
INCLUDEDIR = ../Include

#*** End User Defined Variables Section***

#*** Serial or MPI object variables ***
obj_serial = auxiliary.o conduction.o convection.o fire.o flowfan.o flowhall.o \
             flowhorizontal.o flowvertical.o initialization.o input.o numerics.o \
             output.o outputsmv.o outputspreadsheet.o radation.o target.o cfast.o

#*** General Purpose Rules ***
no_target:
	@echo \******** You did not specify a make target \********
	@echo Please read the comments at the top of the makefile

setup:
%.o : %.mod

.SUFFIXES: .f90 .f .o

.f90.o:
	$(FCOMPL) -c $(FFLAGS) -I $(INCLUDEDIR) $<
.f.o:
	$(FCOMPL) -c $(FFLAGS) -I $(INCLUDEDIR) $<

#*** Begin Compiler Specific Rules ***

#*** Intel Compiler ***

# Linux
intel_linux_32 : FFLAGS = -O3 -axP -ip -static -vec_report0
intel_linux_32 : FCOMPL = ifort
intel_linux_32 : obj = cfast_intel
intel_linux_32 : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
	
intel_linux_db : $(obj_serial)
intel_linux_db : FFLAGS = -FR  -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static
intel_linux_db : FCOMPL = ifort
intel_linux_db : obj = cfast_intel_db
intel_linux_db : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

# OS X
intel_osx_32 : FFLAGS = -O3 -axTP -heap-arrays -ip -vec_report0 -m32
intel_osx_32 : FCOMPL = ifort
intel_osx_32 : obj = cfast_osx_intel_32
intel_osx_32 : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_osx_db_32 : FFLAGS = -FR  -O0 -m32 -heap-arrays -WB -traceback -g -fpe0 -fltconsistency
intel_osx_db_32 : FCOMPL = ifort
intel_osx_db_32 : obj = cfast_osx_intel_db_32
intel_osx_db_32 : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_osx_64 : FFLAGS = -O3 -axTP -heap-arrays -ip -vec_report0 -m64
intel_osx_64 : FCOMPL = ifort
intel_osx_64 : obj = cfast_osx_intel_64
intel_osx_64 : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_osx_64_mc : FFLAGS = -O3 -axTP -heap-arrays -ip -parallel -m64
intel_osx_64_mc : FCOMPL = ifort
intel_osx_64_mc : obj = cfast_osx_intel_64_mc
intel_osx_64_mc : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)

intel_osx_db_64 : FFLAGS = -FR  -O0 -m64 -heap-arrays -WB -traceback -g -fpe:0 -fltconsistency -fpstkchk
intel_osx_db_64 : FCOMPL = ifort
intel_osx_db_64 : obj = cfast_osx_intel_db_64
intel_osx_db_64 : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)


#*** IBM XLF Compiler ***

ibm_osx_ppc : FFLAGS = -O4 -qstrict -qextname -qarch=auto -qtune=auto
ibm_osx_ppc : FCOMPL = /opt/ibmcmp/xlf/8.1/bin/xlf95
ibm_osx_ppc : obj = cfast_osx_ppc_ibm
ibm_osx_ppc : setup $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
	
#*** Lahey Compiler ***

lahey_linux : FFLAGS = -O --tpp --staticlink --nap --nchk --npca --nsav --ntrace
lahey_linux : FCOMPL = lf95
lahey_linux : obj = cfast_lahey
lahey_linux : $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
	
lahey_linux_db : FFLAGS = --swm 3909 --wo --tpp --chk --f95 -g --warn --staticlink
lahey_linux_db : FCOMPL = lf95
lahey_linux_db : obj = cfast_lahey_db
lahey_linux_db : $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
	
#*** Sun Solaris 10 f95 Compiler ***

f95_solaris10 : FFLAGS   = -O2 -m64 -Bstatic
f95_solaris10 : FCOMPL   = f95
f95_solaris10 : obj = cfast_solaris
f95_solaris10 : $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)


#*** Portland Group Compiler***

# AMD Opteron 64Bit PC
pgi_linux : FFLAGS = -fast -tp k8-64 -Mstandard
pgi_linux : FCOMPL = pgf90
pgi_linux : LFLAGS  = -fast -tp k8-64 -byteswapio -Bstatic -lc -lgcc_eh
pgi_linux : obj = cfast_pgi_Opteron64
pgi_linux : $(obj_serial)
	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)


#*** End Compiler Specific Rules ***

# *** Object Dependencies ***

auxiliary.o : auxiliary.f
conduction.o : conduction.f
convection.o : convection.f
fire.o : fire.f
flowfan.o : flowfan.f
flowhall.o : flowhall.f
flowhorizontal.o : flowhorizontal.f
flowvertical.o : flowvertical.f
initialization.o : initialization.f
input.o : input.f
numerics.o : numerics.f
output.o : output.f
outputsmv.o : outputsmv.f90
outputspreadsheet.o : outputspreadsheet.f
radation.o : radation.f
target.o : target.f
cfast.o : cfast.f auxiliary.f conduction.f convection.f fire.f flowfan.f flowhall.f flowhorizontal.f flowvertical.f initialization.f input.f numerics.f output.f outputsmv.f90 outputspreadsheet.f radation.f target.f

#*** Clean Target to remove Object and Module files ***

.PHONY : clean
clean:
	-rm -f *.o *.mod *.obj
