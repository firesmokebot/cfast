      subroutine readcsvformat (iunit,x,c,numr,numc,nstart,maxr,maxc,
     . ierror)

c
c   reads a comma-delimited file as generated by Micorsoft Excel
c   program assumes that all the data is in the form of real numbers
c
c   Variables:
c     iunit  = logical unit, already open to .csv file
c     x      = array of dimension (numr,numc) for values in spreadsheet
c     c      = character array of same dimenaion as x for character values in spreadsheet
c     numr   = # of rows of array x
c     numc   = # of columns of array x
c     nstart = starting row of spreadsheet to read
c     nr     = actual number of rows read
c     nc     = actual number of columns read
c

      include	 "cparams.fi"
      include	 "cshell.fi"

	double precision x(numr,numc)
	character in*10000,token*128, c(numr,numc)*(*)
	integer ierror

	maxr = 0
	maxc = 0
	ierror = 0
	do i=1,numr
	  do j=1,numc
	    x(i,j) = 0.
		c(i,j) = ' '
	  end do
	end do

! if we have header rows, then skip them

	if (nstart.gt.1) then
	  do  i=1,nstart-1
	    read (iunit,'(A)') in
        end do 
      end if

! read the data

	nrcurrent=0
20    read (iunit,'(A)',end=100) in

! Skip comments
	if (in(1:1).eq.'!'.or.in(1:1).eq.'#') then
		 go to 20
	endif

      nrcurrent=nrcurrent+1
	maxr=max(maxr,nrcurrent)

! Cannot exceed work array
	if(maxr.gt.numr) then
		 ierror = 207
		 return
	endif

      nc=0
      ic=1
30	icomma=index(in,',')
	if (icomma.ne.0) then
	  if (icomma.eq.ic) then
	    token=' '
	  else
	    token=in(ic:icomma-1)
	  end if
	  ic = icomma+1
	  nc = nc + 1
	  in(1:ic-1)=' '
	  if (nrcurrent.le.numr.and.nc.le.numc) then
		c(nrcurrent,nc) = token
	   read (token,'(f128.0)',iostat=ios) x(nrcurrent,nc)
		if (ios.ne.0) x(nrcurrent,nc) = 0
	  else
		write (logerr,*) 'Array exceeded (readcsv), r,c=',nrcurrent,nc
		ierror = 207
		return
	  end if
	  go to 30
	end if
	nc = nc + 1
	maxc=max(maxc,nc)
	token = in(ic:ic+100)
	c(nrcurrent,nc) = token
	read (token,'(f128.0)',iostat=ios) x(nrcurrent,nc)
	if (ios.ne.0) x(nrcurrent,nc) = 0
	go to 20

100   continue
	
      return
      end
