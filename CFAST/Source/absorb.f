      DOUBLE PRECISION FUNCTION ABSORB (CMPT, LAYER)
C
C  FUNCTION CALCULATES ABSORBANCE, DUE TO GASES (CO2 AND H2O) AND SOOT,
C  FOR THE SPECIFIED COMPARTMENT AND LAYER.
C
C  ABSORBANCES ARE ASSUMED TO BE EQUAL TO EMISSIVITIES. PER SPFE 
C  HANDBOOK (1988 ED., PAGES 1-99 - 1-101), GAS ABSORBANCE IS
C  CALCULATED AS
C
C  AG = CH2O * EH2O + CCO2 * ECO2 - DELTAE ~ EH2O + 0.5 * ECO2;
C
C  WHERE CH2O AND CCO2 ARE CONCENTRATIONS AND DELTAE IS A CORRECTION
C  FOR OVERLAP OF THE ABSORBANCE BANDS.
C
C  ECO2 AND EH2O ARE INTERPOLATED FROM SPFE HANDBOOK GRAPHS WHICH SHOW 
C  E = F(T,PL), WHERE T IS THE GAS TEMPERATURE (KELVINS) AND PL IS THE
C  PARTIAL PRESSURE-PATH LENGTH PRODUCT (ATM-M). TEMPERATURE AND GAS 
C  PARTIAL PRESSURES ARE BASED ON DATA CALCULATED ELSEWHERE AND STORED IN
C  COMMON BLOCKS. USING HANDBOOK FORMULAE, PATH LENGTH IS ESTIMATED AS
C
C  L = C * 4 * V/A; WHERE C ~ 0.9 FOR TYPICAL GEOMETRIES, V IS THE GAS 
C      VOLUME AND A IS THE SURFACE AREA OF THE GAS VOLUME.
C
C  TOTAL ABSORBANCE IS CALCULATED AS
C
C  AT = AS + AG * TRANS = (1 - EXP(-AS)) + AG * EXP(-AS);
C
C  WHERE AS IS SOOT ABSORPION, AG IS GAS ABSORPTION, TRANS IS SOOT
C  TRANSMISSION, A IS THE EFFECTIVE ABSORBANCE COEFFICIENT FOR SOOT AND
C  S IS THE PHYSICAL PATHLENGTH. S IS APPRXOMINATED BY L, THE MEAN BEAM
C  LENGTH, AND A ~ K*VFS*TG, WHERE VFS IS THE SOOT VOLUME FRACTION, TG THE
C  GAS TEMPERATURE AND K IS A CONSTANT. FOR TYPICAL FUELS, K ~ 1195.5.
C
C  VERSION 1.0.3
C
C  REVISION HISTORY:
C    CREATED 12/09/94 - JBH
C    MODIFIED 08/14/95 - JBH
C       REPLACED GAS MASS CALCULATION (LAYER MASS * GAS MASS FRACTION) WITH
C       REFERENCE TO SPECIES MASS GLOBAL VARIABLE, ZZGSPEC, IN GAS ABSORB-
C       ANCE TERM.
C    MODIFIED 08/17/95 - JBH
C      CORRECTED VALUE OF GAS CONSTANT PER CRC HNDBK OF CHEM. & PHY.; 52ND ED.
C    MODIFIED 09/28/95
C      PER GLENN FORNEY, THE RADX ROUTINES EXPECT AN EXTINCTION COEFFICIENT, RATHER
C      THAN AN ABSORBANCE, THEREFORE, ABSORB WAS MODIFIED TO RETURN [- LOG(1 - ABSORB)/L]
C    MODIFIED 9/12/96  - GPF
C      LOG(TG) was passed in argument list to LINTERP routine.  But LINTERP routine may
C      modify it.  Therefore, a this value is stored in a variable, TGLOG and TGLOG is
C      now passed to LINTERP.
C    MODIFIED 7/3/97 - GPF
C      Eliminated a catastrophic cancellation in the absorbance calculation.  
C      Note new code is equivalent mathematically to the old.  This version is 
C      better because it removes the need for an EXP calculation and eliminates 
C      a cancellation error.  This cancellation error was causing the code bomb.
C    MODIFIED 10/19/97 GPF
C      Converted code to double precision.
C
C  DECLARE COMMON BLOCK VARIABLES (AR, BR, ZZ????, ETC) AND CONSTANTS
C  (UPPER & LOWER). ORDER OF 'INCLUDE' FILES IS CRITICAL.
C  CFAST.INC INVOKES CPARAMS.INC & DSIZE.INC
C
      include "precis.fi"
      include "cfast.fi"
      include "cenviro.fi"
C
C  DECLARE PARAMETERS
C
      INTEGER NOERR, HIERR, LOERR
      PARAMETER (NOERR=0, HIERR=+1, LOERR=-1)
C
      INTEGER CO2XSIZE, CO2YSIZE, H2OXSIZE, H2OYSIZE
      PARAMETER (CO2XSIZE=11, CO2YSIZE=12, H2OXSIZE=11, H2OYSIZE=12)
C
      INTEGER CO2, H2O, SOOT
      PARAMETER (CO2=3, H2O=5, SOOT=9)	
C
C  DECLARE I/O VARIABLES
C
      INTEGER CMPT, LAYER
C
C  DECLARE INTERNAL VARIABLES
C  UNITS:
C    TG = KELVINS; TCO2, TH2O = LOG(KELVINS)
C    PLG = ATM-M; PLCO2, PLH2O = LOG(ATM-M)
C    L = M; NG = MOL; RTV = ATM/MOL
C    AG, ABSORB = NUMBER (ABSORBANCE)
C    ACO2, AH2O, ECO2, EH2O = LOG(EMISS)
C    VFS = NUMBER (SOOT VOLUME FRACTION)
C    RHOS = KG/CUBIC METER (SOOT DENSITY)
C    TRANS = NUMBER (SOOT TRANSMISSION = EXP(-K*VFS*TG*L))
C    K = 1/(KELVIN-METER) (SSOT ABSORPTION CONSTANT)
C    MWCO2, MWH2O = GAS MOLECULAR WEIGHT (KG/GM-MOLE)
C    RG = IDEAL GAS CONSTANT (ATM-M^3/MOL-K)
C
      INTEGER XCO2, YCO2, XH2O, YH2O
      DIMENSION TCO2(CO2XSIZE), PLCO2(CO2YSIZE)
      DIMENSION ECO2(CO2XSIZE,CO2YSIZE)
      DIMENSION TH2O(H2OXSIZE)
      DIMENSION PLH2O(H2OYSIZE), EH2O(H2OXSIZE,H2OYSIZE)
      DOUBLE PRECISION MWCO2,MWH2O, K, RHOS, L, NG

C  DECLARE MODULE DATA
C
C  PHYSICAL CONSTANTS [MW IN KG/MOL; RG IN M^3-ATM/MOL-KELVIN]

      DATA MWCO2, MWH2O, RG, K, RHOS
     +  /44.0088D-3, 18.0153D-3, 82.0562D-6, 1195.5D0, 1800.0D0/
C
C  LOG(T) DATA FOR CO2 [T IN K] 
C 
      DATA TCO2  /2.3010D0, 2.4771D0, 2.6021D0, 2.6990D0, 
     +            2.7782D0, 2.8451D0, 2.9031D0, 2.9542D0,
     +            3.0000D0, 3.3010D0, 3.4771D0        /
C
C  LOG(PL) DATA FOR CO2 [PL IN ATM-M]
C
      DATA PLCO2 /-3.0000D0, -2.6990D0, -2.3979D0, -2.0000D0,
     +            -1.6990D0, -1.3979D0, -1.0000D0, -0.6990D0,
     +            -0.3979D0,  0.0000D0,  0.3010D0,  0.6021D0/
C
C  LOG(EMISS) DATA FOR CO2 [STORED IN E(T,PL) FORMAT (ASCENDING ORDER 
C  BY TEMPERATURE, THEN BY PRESSURE-LENGTH)]
C
      DATA ECO2  /-1.8508D0, -1.8416D0, -1.8508D0, -1.7799D0,
     +            -1.6990D0, -1.6799D0, -1.6904D0, -1.6990D0,
     +            -1.7399D0, -2.3706D0, -2.8996D0,
     +            -1.6990D0, -1.6799D0, -1.6904D0, -1.6308D0,
     +            -1.5498D0, -1.5302D0, -1.5302D0, -1.5498D0, 
     +            -1.5800D0, -2.1002D0, -2.6108D0,
     +            -1.5406D0, -1.5200D0, -1.5498D0, -1.4895D0,
     +            -1.4401D0, -1.3904D0, -1.3904D0, -1.4101D0,
     +            -1.4202D0, -1.8894D0, -2.3002D0,
     +            -1.3799D0, -1.3298D0, -1.3497D0, -1.3298D0,
     +            -1.2700D0, -1.2403D0, -1.2403D0, -1.2503D0,
     +            -1.2700D0, -1.6596D0, -2.0400D0,
     +            -1.2403D0, -1.2000D0, -1.2403D0, -1.2104D0,
     +            -1.1599D0, -1.1403D0, -1.1302D0, -1.1403D0,
     +            -1.1500D0, -1.5200D0, -1.8894D0,
     +            -1.1403D0, -1.1002D0, -1.1403D0, -1.1203D0,
     +            -1.0799D0, -1.0400D0, -1.0301D0, -1.0301D0,
     +            -1.0600D0, -1.3799D0, -1.7305D0, 
     +            -1.0400D0, -0.9914D0, -1.0200D0, -1.0200D0,
     +            -0.9706D0, -0.9547D0, -0.9431D0, -0.9355D0,
     +            -0.9431D0, -1.1599D0, -1.4802D0,
     +            -0.9914D0, -0.9431D0, -0.9547D0, -0.9508D0,
     +            -0.9136D0, -0.8827D0, -0.8666D0, -0.8539D0,
     +            -0.8601D0, -1.1002D0, -1.3706D0, 
     +            -0.9355D0, -0.8697D0, -0.8928D0, -0.8827D0,
     +            -0.8477D0, -0.8097D0, -0.7932D0, -0.7852D0,
     +            -0.7932D0, -1.0000D0, -1.2700D0,
     +            -0.8762D0, -0.8013D0, -0.8097D0, -0.8013D0,
     +            -0.7645D0, -0.7352D0, -0.7100D0, -0.6990D0,
     +            -0.6990D0, -0.8962D0, -1.1331D0,
     +            -0.8297D0, -0.7496D0, -0.7645D0, -0.7472D0,
     +            -0.7055D0, -0.6696D0, -0.6421D0, -0.6326D0,
     +            -0.6402D0, -0.8097D0, -1.0301D0,
     +            -0.8013D0, -0.7144D0, -0.7144D0, -0.6840D0,
     +            -0.6478D0, -0.6108D0, -0.5884D0, -0.5817D0,
     +            -0.5817D0, -0.7352D0, -0.9431D0         /
C
C  LOG(T) DATA FOR H2O [T IN K] 
C 
      DATA TH2O  /2.3201D0, 2.4771D0, 2.6021D0, 2.6990D0,
     +            2.7782D0, 2.8451D0, 2.9031D0, 2.9542D0,
     +            3.0000D0, 3.3010D0, 3.4771D0        /
C
C  LOG(PL) DATA FOR H2O [PL IN ATM-M]
C
      DATA PLH2O /-3.0000D0, -2.6990D0, -2.3979D0, -2.0000D0,
     +            -1.6990D0, -1.3979D0, -1.0000D0, -0.6990D0,
     +            -0.3979D0,  0.0000D0,  0.3010D0,  0.6021D0/
C
C  LOG(EMISS) DATA FOR H2O [STORED IN E(T,PL) FORMAT (ASCENDING ORDER 
C  BY TEMPERATURE, THEN BY PRESSURE-LENGTH)]
C
      DATA EH2O  /-1.1500D0, -1.5200D0, -1.7496D0, -1.8996D0,
     +            -2.0000D0, -2.1002D0, -2.1898D0, -2.2798D0,
     +            -2.3706D0, -3.0555D0, -3.4437D0,
     +            -1.0200D0, -1.3298D0, -1.5302D0, -1.6596D0,
     +            -1.7595D0, -1.8416D0, -1.9208D0, -2.0000D0,
     +            -2.0799D0, -2.7496D0, -3.1871D0,
     +            -0.8962D0, -1.1701D0, -1.3242D0, -1.4597D0,
     +            -1.5406D0, -1.6003D0, -1.6596D0, -1.7305D0,
     +            -1.7905D0, -2.4202D0, -2.8794D0,
     +            -0.7696D0, -1.0000D0, -1.1302D0, -1.2204D0,
     +            -1.3002D0, -1.3497D0, -1.4001D0, -1.4401D0,
     +            -1.4802D0, -1.9914D0, -2.5200D0,
     +            -0.6402D0, -0.8729D0, -0.9957D0, -1.0799D0,
     +            -1.1302D0, -1.1701D0, -1.2104D0, -1.2503D0,
     +            -1.2899D0, -1.6904D0, -2.1500D0,
     +            -0.5884D0, -0.7645D0, -0.8729D0, -0.9355D0,
     +            -0.9788D0, -1.0200D0, -1.0400D0, -1.0701D0,
     +            -1.1002D0, -1.4101D0, -1.8210D0,
     +            -0.5003D0, -0.6556D0, -0.7258D0, -0.7545D0,
     +            -0.7932D0, -0.8153D0, -0.8447D0, -0.8665D0,
     +            -0.8894D0, -1.0799D0, -1.4401D0,
     +            -0.4437D0, -0.5670D0, -0.6271D0, -0.6402D0,
     +            -0.6517D0, -0.6696D0, -0.6861D0, -0.6990D0,
     +            -0.7190D0, -0.8729D0, -1.1403D0,
     +            -0.3936D0, -0.5086D0, -0.5302D0, -0.5376D0,
     +            -0.5482D0, -0.5528D0, -0.5670D0, -0.5719D0,
     +            -0.5817D0, -0.7122D0, -0.9431D0,
     +            -0.3458D0, -0.4295D0, -0.4401D0, -0.4365D0,
     +            -0.4401D0, -0.4413D0, -0.4510D0, -0.4535D0,
     +            -0.4584D0, -0.5376D0, -0.7144D0,
     +            -0.2958D0, -0.3686D0, -0.3686D0, -0.3645D0,
     +            -0.3645D0, -0.3686D0, -0.3706D0, -0.3757D0,
     +            -0.3757D0, -0.4510D0, -0.5952D0,
     +            -0.2620D0, -0.3307D0, -0.3233D0, -0.3045D0,
     +            -0.3010D0, -0.3045D0, -0.3045D0, -0.3054D0,
     +            -0.3080D0, -0.3605D0, -0.5086D0         /
C
C  CALCULATE LAYER-SPECIFIC FACTORS
C
      TG = ZZTEMP(CMPT, LAYER)
      RTV = (RG * TG) / ZZVOL(CMPT, LAYER)
      L = ZZBEAM(LAYER,CMPT)

      AG = 0.0D0

C  CALCULATE ABSORBANCE FOR CO2

      NG = ZZGSPEC(CMPT, LAYER, CO2) / MWCO2
      PLG = NG * RTV * L
      IF (PLG.GT.1.0D-3) THEN
        CPLG = LOG10(PLG)
        TGLOG = LOG10(TG)
        CALL LINTERP(CO2XSIZE, CO2YSIZE, TCO2, PLCO2, ECO2, TGLOG,
     +               CPLG, ACO2, XCO2, YCO2)
        AG = AG + 0.50D0*10.0D0**ACO2
      ENDIF


C  CALCULATE ABSORBANCE FOR H2O

      NG = ZZGSPEC(CMPT, LAYER, H2O) / MWH2O
      PLG = NG * RTV * L
      IF (PLG.GT.1.0D-3) THEN
        CPLG = LOG10(PLG)
        TGLOG = LOG10(TG)
        CALL LINTERP(H2OXSIZE, H2OYSIZE, TH2O, PLH2O, EH2O, TGLOG,
     +               CPLG, AH2O, XH2O, YH2O)
        AG = AG + 10.0D0**AH2O
      ENDIF


C  CALCULATE TOTAL ABSORBANCE

      VFS = ZZGSPEC(CMPT,LAYER,SOOT)/(ZZVOL(CMPT,LAYER) * RHOS)
c      TRANS = EXP(-1. * K * VFS * TG * L) 
c      ABSORB = (1 - TRANS) + AG * TRANS
c      ABSORB = - LOG(1 - ABSORB)/L
c
c*** The following line of code is equivalent
c    to the previous three lines and has the virture of
c    eliminating an exp calculation and the cancellation
c    error caused by the subtraction in (1-TRANS) gpf 7/3/97

      ABSORB = MAX(K*VFS*TG - LOG(1.0D0-AG)/L,0.01D0)
      RETURN
 1000 FORMAT ('ERROR IN ',A3,' ABSORBANCE: XERROR = 'I2,
     +    '; YERROR = ',I2)
      END

      SUBROUTINE LINTERP(XDIM, YDIM, X, Y, Z, XVAL, YVAL, ZVAL,
     + XERR, YERR)
C
C  SUBROUTINE CALCULATES A 2-D LINEAR INTERPOLATION OF F(X,Y); WHERE KNOWN
C  F(X,Y) VALUES ARE IN Z, ALLOWED X AND Y VALUES ARE IN X AND Y, THE POINT
C  TO BE INTERPOLATED IS (XVAL,YVAL) AND THE INTERPOLATED RESULT IS RETURNED
C  AS ZVAL. ARRAY DIMENSIONS ARE SPECIFIED BY XDIM AND YDIM, XERR AND YERR
C  ARE ERROR VALUES RETURNED TO THE CALLING FUNCTION.
C
C  THE EQUATION IMPLIMENTED BY THIS FUNCTION IS:
C
C  F(X,Y) = Z(I,J) + {[Z(I+1,J) - Z(I,J)] / [X(I+1) - X(I)]} * [X - X(I)] 
C           + {[Z(I,J+1) - Z(I,J)] / [Y(J+1) - Y(I)]} * [Y - Y(J)]
C
C  VERSION 1.0
C
C  REVISION HISTORY:
C     CREATED 12/07/94 - JBH
C
C      IMPLICIT NONE
      include "precis.fi"
      INTEGER HIERR
      PARAMETER (NOERR=0, HIERR=+1, LOERR=-1) 
C
C  DECLARE I/O PARAMETERS 
C
      INTEGER XDIM, YDIM, XERR, YERR
      DIMENSION X(XDIM), Y(YDIM), Z(XDIM,YDIM)
C
C  DECLARE INTERNAL VARIABLES
C
      INTEGER COUNT
C
C  FIND THE VALUE OF I SUCH THAT X(1) <= XVAL <= X(XDIM).
C  IF XVAL IS OUTSIDE THAT RANGE, SET IT TO THE CLOSEST LEGAL VALUE
C  AND SET THE ERROR VALUE, AS APPROPRIATE.
C
C  CHECK THE SPECIAL CASE OF XVAL < X(1)
C
      IF (XVAL .LT. X(1)) THEN
        XERR = LOERR
        XVAL = X(1)
        I = 1
C
C  CHECK THE SPECIAL CASE OF XVAL > X(XDIM)
C
      ELSE IF (XVAL .GT. X(XDIM)) THEN
        XERR = HIERR
        XVAL = X(XDIM)
        I = XDIM
C
C  CHECK THE CASES WHERE X(1) <= XVAL < X(XDIM)
C
      ELSE
        XERR = NOERR
        DO 10 COUNT=2,XDIM
          IF (XVAL .LT. X(COUNT)) THEN
            I = COUNT - 1
            GO TO 20
          END IF 
   10   CONTINUE
C
C  THEN XVAL = X(XDIM)
C
        I = XDIM
   20   CONTINUE
      END IF
C
C  CHECK THE SPECIAL CASE OF YVAL < Y(1)
C
      IF (YVAL .LT. Y(1)) THEN
        YERR = LOERR
        YVAL = Y(1)
        J = 1
C
C  CHECK THE SPECIAL CASE OF YVAL > Y(YDIM)
C
      ELSE IF (YVAL .GT. Y(YDIM)) THEN
        YERR = HIERR
        YVAL = Y(YDIM)
        J = YDIM
C
C  CHECK THE CASES OF Y(1) <= YVAL < Y(YDIM)
C
      ELSE
        YERR = NOERR
        DO 30 COUNT=2,YDIM
          IF (YVAL .LT. Y(COUNT)) THEN
            J = COUNT - 1
            GO TO 40
          END IF
   30 CONTINUE
C
C  THEN YVAL = Y(YDIM)
C
      J = YDIM
   40 CONTINUE
      END IF
C
C  CALCULATE DELTA X, SLOPE X AND THE Z INCREMENT DUE TO A CHANGE IN X.
C  IF XVAL = X(XDIM), THEN (I+1) IS UNDEFINED AND THE SLOPE CAN NOT BE
C  CALCULATED. HOWEVER, IN THOSE CASES, DELTA X IS ZERO, THERE IS NO 
C  CONTRIBUTION DUE TO THE CHANGE IN X AND THE ENTIRE TERM MAY BE SET
C  EQUAL TO ZERO.
C
      DELTAX = XVAL - X(I)
      IF (DELTAX .NE. 0.0D0) THEN
        DZDX = (Z(I+1,J) - Z(I,J)) / (X(I+1) - X(I))
        DELX = DZDX * DELTAX
      ELSE
        DELX = 0.
      END IF
C
C  CALCULATE THE Z INCREMENT DUE TO A CHANGE IN Y AS ABOVE.
C
      DELTAY = YVAL - Y(J)
      IF (DELTAY .NE. 0.0D0) THEN
        DZDY = (Z(I,J+1) - Z(I,J)) / (Y(J+1) - Y(J))
        DELY = DZDY * DELTAY
      ELSE
        DELY = 0.
      END IF
C
C  INTERPOLATE A VALUE FOR F(X,Y)
C
      ZVAL = Z(I,J) + DELX + DELY
      RETURN
      END
